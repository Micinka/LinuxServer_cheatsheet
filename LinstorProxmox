# ProxmoxVE instal drbd9 with LINSTOR HA Controller


# First of all add licence key or add no-subscription repo and make sure it is active, the file should look like this, you can echo >> it right like is (for Proxmox 7.4.1), you need one of these repos to install pve-headers for DRBD9, Linstor needs drbd9 to work.

cat << EOF > /etc/apt/sources.list2
deb http://ftp.cz.debian.org/debian bullseye main contrib

deb http://ftp.cz.debian.org/debian bullseye-updates main contrib

# security updates
deb http://security.debian.org bullseye-security main contrib

deb http://download.proxmox.com/debian/pve bullseye pve-no-subscription
EOF


# Install latest kernel headers and then drbd 9

apt install pve-headers -y

echo "deb http://packages.linbit.com/proxmox/ proxmox-7 drbd-9" > /etc/apt/sources.list.d/linbit.list
wget -O- https://packages.linbit.com/package-signing-pubkey.asc | apt-key add -
apt update
apt install drbd-dkms drbd-utils -y

# check if drbd module is loaded, just to be sure load it
rmmod drbd; modprobe drbd
grep -q drbd /etc/modules || echo "drbd" >> /etc/modules


apt-get -y install linstor-proxmox linstor-satellite linstor-client
systemctl start linstor-satellite


# Prepare Deb11 Container for Linstor Controller initialization, or create from GUI
wget http://download.proxmox.com/images/system/debian-11-standard_11.0-1_amd64.tar.gz -P /var/lib/vz/template/cache/
pct create 100 local:vztmpl/debian-11-standard_11.0-1_amd64.tar.gz \
  --hostname=linstor-controller \
  --net0=name=eth0,bridge=vmbr0,gw=10.1.0.1,ip=10.1.0.123/16
  # Insert your ip all PVE nodes can reach


# Now start the container and launch console, or you can SSH into it
pct start 100
pct exec 100 bash


# IN CONTAINER
apt install gnupg gnupg2

apt update
apt upgade -y


echo "deb http://packages.linbit.com/proxmox/ proxmox-7 drbd-9" > /etc/apt/sources.list.d/linbit.list
wget -O- https://packages.linbit.com/package-signing-pubkey.asc | apt-key add -
apt update

apt install -y linstor-controller linstor-client

systemctl start linstor-controller.service
systemctl enable linstor-controller.service

# Linstor requires configured locale. Configure locale:

sed -i '/en_US.UTF-8 UTF-8/ s/^# //' /etc/locale.gen
locale-gen

dpkg-reconfigure tzdata


# Now when we have installed the controller and have linstor-satelite on all of our nodes, we create cluster (on the controller console)

# Be careful to use the same name the nodes hostname, watch out for errors
linstor node interface create pve1 data 10.2.0.11
linstor node interface create pve2 data 10.2.0.12
linstor node interface create pve3 data 10.2.0.13

# now we should see the nodes in list command
linstor node list

╭──────────────────────────────────────────────────────────────╮
┊ Node ┊ NodeType  ┊ Addresses                        ┊ State  ┊
╞┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄╡
┊ pve1 ┊ SATELLITE ┊ 10.0.1.11,10.0.2.11:3366 (PLAIN) ┊ Online ┊
┊ pve2 ┊ SATELLITE ┊ 10.0.1.12,10.0.2.12:3366 (PLAIN) ┊ Online ┊
┊ pve3 ┊ SATELLITE ┊ 10.0.1.13,10.0.2.13:3366 (PLAIN) ┊ Online ┊
╰──────────────────────────────────────────────────────────────╯



# Creatig storage pool on all 3 nodes, for example ZFS pool with created dataset for linstor  "fast/linstor"
# linstor storage-pool create "storage backend type" "node" "name of new pool" "stogage resource"
linstor storage-pool create zfs pve1 zfs_pool fast/linstor
linstor storage-pool create zfs pve2 zfs_pool fast/linstor
linstor storage-pool create zfs pve2 zfs_pool fast/linstor

# Refer to manual for more info on diferent storage backends https://linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-storage_pools



# We have LINSTOR 3 node cluster with backend for replicating storage, now we need to create resource group for our VM images, etc.
# Refer to manual for more options in creatin resource groups and definitions, here we will create example resource group with placing resources on only 2 nodes

# We already have <zfs_pool> pool
linstor resource-group create images --storage-pool zfs_pool --place-count 2    # creating resource group with number of placements, more options in manual
linstor resource-group drbd-options --verify-alg crc32c images
linstor volume-group create images      # Creating volume group on top of resource-group, here our resources (VM drives, etc) get placed


# You can also exclude node from placing any resources to it, for example a tie-breaker node
#   linstor node set-property <node_name> AutoplaceTarget false

# And finaly you need to add the resource group to your /etc/pve/storage.cfg file to use the storage in GUI ( here the linstor-proxmox package does the job)
# Add this to your config file, change accorging node names and resource group names, etc.
drbd: linstor-images
        content images,rootdir
        controller pve1,pve2,pve3
        resourcegroup images

















# High Avability SETUP

# Temporarely enable controller service so we can create resources for HA controller

apt-get update && apt install -y linstor-controller linstor-client


# Disable the service on all nodes so it does not auto-start, this will be managed by drbd.reactor
systemctl disable linstor-controller.service
systemctl stop linstor-controller.service

# Chose one node from which we will start and configure the Linstor Cluster
systemctl start linstor-controller.service


# Configure HA storage for linstor roaming controller
# You will need at least 2 nodes to create resource

linstor resource-definition create linstor_db
linstor resource-definition drbd-options --on-no-quorum=io-error linstor_db
linstor resource-definition drbd-options --auto-promote=no linstor_db
linstor volume-definition create linstor_db 200M
linstor resource create linstor_db -s zfs_pool --auto-place 3
# In last command replace "zfs_pool" with your pool name which you created earlier

# Preparing for next step (mounting HA resource to folder with linstor database, more on that in a few rows)
drbdadm primary linstor_db

# Now disable the service (after creating nodes and the replicated resource for database)
systemctl stop --now linstor-controller

# Create service from which we will mount the HA resource containing the Linstor Database
# Repeat this step on every node
cat << EOF > /etc/systemd/system/var-lib-linstor.mount
[Unit]
Description=Filesystem for the LINSTOR controller

[Mount]
# you can use the minor like /dev/drbdX or the udev symlink
What=/dev/drbd/by-res/linstor_db/0
Where=/var/lib/linstor
EOF


# Rename folder containing current linstor database file, create new folder which we are gonna use as mount point for HA resource
mv /var/lib/linstor{,.orig}
mkdir /var/lib/linstor      # Repeat this step on every node
# we did this earlier, but just in case:       drbdadm primary linstor_db
mkfs.ext4 /dev/drbd/by-res/linstor_db/0
systemctl start var-lib-linstor.mount
cp -r /var/lib/linstor.orig/* /var/lib/linstor
systemctl start linstor-controller


# Repeat following steps on every node


# Now we want to install required package for drbd HA setup, and restart + enable the service
apt install drbd-reactor

# Create file with config for drbd-reactor
cat << EOF > //etc/drbd-reactor.d/linstor_db.toml
[[promoter]]
id = "linstor_db"
[promoter.resources.linstor_db]
start = ["var-lib-linstor.mount", "linstor-controller.service"]
EOF

systemctl restart drbd-reactor
systemctl enable drbd-reactor

# Check for errors in the service
systemctl status drbd-reactor

# Now we need to edit the linstor-satelite service to NOT delete the resource file for linstor controller DB at startup
systemctl edit linstor-satellite

# Add this to end of file
[Service]
Environment=LS_KEEP_RES=linstor_db

# And restart the service
systemctl restart linstor-satellite


# Now we need to tell linstor where avalible controllers could be, so we can use linstor commands on each node
mkdir /etc/linstor
cat << EOF > /etc/linstor/linstor-client.conf
[global]
controllers=pve1,pve2,pve3
EOF

